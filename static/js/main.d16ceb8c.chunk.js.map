{"version":3,"sources":["seedData.js","styles/FlashCardStyles.js","FlashCard.js","styles/RenderCardStyles.js","Navbars/CardsNavbar.js","RenderCards.js","forms/TextValidatorStyled.js","DisplaySetCards.js","styles/DisplaySetCardsStyles.js","Navbars/BasicNavbar.js","DeleteCards.js","MiniCards.js","styles/MiniCardsStyles.js","styles/HomeStyles.js","Home.js","hooks/useInputState.js","AddQuestionForm.js","styles/AddQuestionFormStyles.js","styles/AddNewCardSetFormStyles.js","AddNewCardSetForm.js","EditCards.js","App.js","hooks/useLocalStorageState.js","serviceWorker.js","index.js"],"names":["setName","setId","cards","id","question","answer","styles","root","width","height","backgroundColor","color","display","flexDirection","alignItems","justifyContent","cursor","position","boxShadow","fontSize","fontWeight","textAlign","cardNumber","top","right","withStyles","classes","useState","isQuestion","setIsQuestion","Card","className","onClick","CardContent","Typography","flexWrap","bottom","padding","left","icon","link","margin","CardsNavbar","class","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","dummyData","console","log","cardId2","setCardId","icons","length","TextValidatorStyled","borderColor","TextValidator","DisplaySetCards","props","state","isSelected","isDialogOpen","isDeleted","formOpen","formQuestion","card","formAnswer","handleSelectClick","bind","handleDeleteClick","openDialog","closeDialog","handleDialogDeleteClick","openEditForm","handleQuestionChange","handleAnswerChange","submitEdit","ValidatorForm","addValidationRule","value","this","setState","addSelectedCards","delete_Cards","event","target","editCard","forDeletingCards","editForm","onSubmit","label","variant","onChange","validators","errorMessages","InputProps","input","formInput","fullWidth","formButton","Button","size","style","outline","cardID","gutterBottom","component","editIcon","buttons","button","Dialog","aria-labelledby","open","onClose","DialogTitle","List","ListItem","ListItemAvatar","Avatar","green","ListItemText","primary","red","Component","overflowY","media","marginLeft","marginBottom","marginRight","BasicNavbar","minHeight","grid","paddingTop","gridColumnGap","gridRowGap","gridTemplateColumns","title","cardSet","realDeleteCardsFromApp","selectedCards","setSelectedCards","doWeAdd","newlist","filter","background","map","index","key","toString","opacity","moreInfo","deleteIcon","transform","transition","set","handleClick","deleteSet","setIsDialogOpen","stopPropagation","widht","paddingBottom","postion","container","entireSet","history","deleteSetFromApp","TransitionGroup","CSSTransition","classNames","timeout","push","useInputState","initialValue","form","data","addQuestionsFromForm","separator","handleSeperatorChange","resetSeparator","handleInputChange","reset","useEffect","split","includes","preventDefault","separatedBy","all_things","new_data","i","multiline","name","rows","separatorField","useStyles","addNewCardSet","handleSetNameChange","resetSetName","toLowerCase","editCardFromApp","edit","oldCard","newCard","newCardList","App","defaultVal","JSON","parse","window","localStorage","getItem","String","e","setItem","stringify","useLocalStorageState","cardsSet","setCardsSet","newData","new_words","setCards","replace","chooseSetToPass","to_return","deleteCards","a","newCardsSet","newCardsList","new_cardSet","exact","path","render","routeProps","routeParams","match","params","AddNewCardSetForm","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d16ceb8c.chunk.js","sourcesContent":["export default [\r\n    \r\n    { \r\n    setName: \"English Words\" ,\r\n    setId: 'english-words',\r\n    cards: [\r\n        {\r\n            id: 1 , \r\n            question: 'Disingenious', \r\n            answer: 'Not candid or sincere by pretending one know less than one actually does'\r\n        },\r\n\r\n        {\r\n            id: 2 , \r\n            question: 'Scrutiny', \r\n            answer: 'Critical Observation'\r\n        },\r\n\r\n        {\r\n            id: 3 , \r\n            question: 'Assail', \r\n            answer: 'Make a violent attack on'\r\n        },\r\n\r\n        {\r\n            id: 4 , \r\n            question: 'Eschew', \r\n            answer: 'Deliberately Avoid Using'\r\n        },\r\n\r\n        {\r\n            id: 5 , \r\n            question: 'Infallible', \r\n            answer: 'Incapable of making mistakes'\r\n        },\r\n        {\r\n            id: 6 , \r\n            question: 'Serendipitous', \r\n            answer: 'Happenning for a good reason'\r\n        },\r\n        {\r\n            id: 7 , \r\n            question: 'Superflous', \r\n            answer: 'Unnecessary'\r\n        },\r\n        {\r\n            id: 8 , \r\n            question: 'Augury', \r\n            answer: 'An Omen'\r\n        },\r\n        {\r\n            id: 9 , \r\n            question: 'Asinine', \r\n            answer: 'Stupid'\r\n        },\r\n        {\r\n            id: 10 , \r\n            question: 'Abeyance', \r\n            answer: 'In a temporary state of unuse'\r\n        },\r\n    ]},\r\n    \r\n    {\r\n    setName: \"Japanese Words\",\r\n    setId: 'japanese-words',\r\n    cards: [\r\n        {\r\n            id: 1 , \r\n            question: 'いしゃ', \r\n            answer: 'Doctor'\r\n        },\r\n\r\n        {\r\n            id: 2 , \r\n            question: 'へいし', \r\n            answer: 'Soldier'\r\n        },\r\n\r\n        {\r\n            id: 3 , \r\n            question: 'けんちくか', \r\n            answer: 'Architect'\r\n        },\r\n\r\n        {\r\n            id: 4 , \r\n            question: 'きょうし', \r\n            answer: 'Teacher'\r\n        },\r\n\r\n        {\r\n            id: 5 , \r\n            question: 'かしゅ', \r\n            answer: 'Singer'\r\n        },\r\n    ]\r\n},{\r\n    setName: \"Anime Manga Cards\",\r\n    setId: 'anime-manga-cards',\r\n    cards: [\r\n        {\r\n            id: 1 , \r\n            question: 'Monster', \r\n            answer: 'Naoki Urasawa'\r\n        },\r\n\r\n        {\r\n            id: 2 , \r\n            question: 'Berserk', \r\n            answer: 'Kentaro Miura'\r\n        },\r\n\r\n        {\r\n            id: 3 , \r\n            question: 'Legend of the Galactic Heores', \r\n            answer: 'Yoshiki Tanaka'\r\n        },\r\n\r\n        {\r\n            id: 4 , \r\n            question: 'Mushishi', \r\n            answer: 'Urashibara Yuki'\r\n        },\r\n\r\n        {\r\n            id: 5 , \r\n            question: '20th Century Boys', \r\n            answer: 'Naoki Urasawa'\r\n        },\r\n    ]\r\n}\r\n]\r\n","const styles = {\r\n    root: {\r\n      width: 350,\r\n      height: 400, \r\n      backgroundColor: 'black',\r\n      color: 'white',\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      cursor: 'pointer',\r\n      position: 'relative',\r\n      boxShadow: '0 0 20px white'\r\n    },\r\n    question : {\r\n        fontSize: '3rem',\r\n        fontWeight: '500'\r\n    },\r\n    answer : {\r\n        fontSize: '1.5rem',\r\n        textAlign: 'center'\r\n    },\r\n    cardNumber : {\r\n        position: 'absolute',\r\n        top: '10px',\r\n        right: '10px'\r\n    }\r\n  };\r\n\r\n  export default styles","import React, { useState } from 'react';\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport styles from './styles/FlashCardStyles'\r\n\r\n\r\nfunction FlashCard({ question, answer, classes, cardNumber }) {\r\n    const [isQuestion, setIsQuestion] = useState(true)\r\n\r\n    function handleClick() {\r\n        setIsQuestion(!isQuestion)\r\n    }    \r\n\r\n    return (\r\n        <Card className={`${classes.root}`} onClick={handleClick}>\r\n            <CardContent>\r\n                <div className={classes.cardNumber}>{cardNumber + 1}</div>\r\n                <Typography className={isQuestion ? classes.question : classes.answer}>\r\n                    {isQuestion ? question : answer}\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(FlashCard)","const styles = {\r\n    root : {\r\n        display: 'flex', \r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        height: '100vh',\r\n        backgroundColor: 'black'\r\n    },\r\n    right: {\r\n        position: 'absolute',\r\n        right: '25%',\r\n        bottom: '15px',\r\n        cursor: 'pointer',\r\n        padding: '5px 15px', \r\n        color: 'white'\r\n    },\r\n    left: {\r\n        position: 'absolute',\r\n        left: '25%',\r\n        bottom: '15px',\r\n        cursor: 'pointer',\r\n        padding: '15px 15px 0 15px',\r\n        color: 'white'\r\n    },\r\n    cards : {\r\n        padding: '50px',\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n        // backgroundColor: 'green'\r\n    }, \r\n    icon : {\r\n        height: '50px',\r\n        width: '50px'\r\n    }, \r\n    link: {\r\n        color: 'white'\r\n    },\r\n    setName: {\r\n        backgroundColor: 'black',\r\n        color: 'white',\r\n        textAlign: 'center',\r\n        margin: '0 0 -45px 0',\r\n        padding: '20px 0 0 0'\r\n    }\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nfunction CardsNavbar({setId}) {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand mr-5\" to=\"/\">Flash Cards</Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul class=\"navbar-nav mr-auto\">\r\n                    <li class=\"nav-item\">\r\n                        \r\n                        <Link to='/create/new-set' className=\"nav-link mr-5\">\r\n                            <i className=\"fas fa-folder-plus mr-2\"></i>\r\n                            Create a new Set\r\n                        </Link>\r\n                    </li>\r\n\r\n                    <li class=\"nav-item\">\r\n                        \r\n                        <Link to={`/${setId}/add`} className=\"nav-link mr-5\">\r\n                            <i class=\"far fa-plus-square mr-2\"></i>\r\n                            Add New Cards To Current Set\r\n                        </Link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        \r\n                        <Link to={`/${setId}/cards/delete`} className=\"nav-link mr-5\">\r\n                            <DeleteIcon className='mr-2'/>\r\n                            Delete Cards\r\n                        </Link>\r\n                    </li>\r\n                    <li class=\"nav-item\">\r\n                        \r\n                        <Link to={`/${setId}/cards/edit`} className=\"nav-link\">\r\n                            <EditIcon className='mr-2'/>\r\n                            Edit Cards\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default CardsNavbar\r\n","import React, {useState} from 'react'\r\nimport FlashCard from './FlashCard'\r\n\r\nimport {withStyles} from \"@material-ui/styles\"\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\r\n\r\nimport styles from './styles/RenderCardStyles'\r\nimport CardsNavbar from './Navbars/CardsNavbar';\r\n\r\nfunction RenderCards({dummyData, classes}) {\r\n\r\n    console.log(\"dummyData in RenderCards: \", dummyData)\r\n\r\n    const [cardId2, setCardId] = useState(0)\r\n\r\n    const handleClickRight = () => {\r\n        if (cardId2 < dummyData.cards.length - 1)\r\n            setCardId(cardId2 + 1)\r\n        else\r\n            setCardId(0)\r\n    }\r\n\r\n    const handleClickLeft = () => {\r\n        if (cardId2 > 0)\r\n            setCardId(cardId2 - 1)\r\n        else\r\n            setCardId(dummyData.cards.length - 1)\r\n    }\r\n    const cards = dummyData.cards\r\n    return (\r\n        <div>\r\n            <CardsNavbar setId={dummyData.setId}/>\r\n            <h4 className={classes.setName}>{dummyData.setName}</h4>\r\n            <div className={classes.root}>\r\n                \r\n                <div className={classes.cards}>\r\n                    \r\n                    <FlashCard \r\n                        question={cards[cardId2].question} \r\n                        answer={cards[cardId2].answer} \r\n                        cardNumber={cardId2}\r\n                    />\r\n                    <div className={classes.icons}>\r\n\r\n                        <div className={classes.right} onClick={handleClickRight}>\r\n                            <KeyboardArrowRightIcon className={classes.icon}/>\r\n                        </div>\r\n                        <div className={classes.left} onClick={handleClickLeft}>\r\n                            <KeyboardArrowLeftIcon className={classes.icon}/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(RenderCards)\r\n","import { withStyles } from '@material-ui/core/styles';\r\nimport {TextValidator} from 'react-material-ui-form-validator'\r\n\r\n\r\nconst TextValidatorStyled = withStyles({\r\n    root: {\r\n          //color of label, ie the words\r\n          '& label.Mui-focused': {\r\n          color: 'white',\r\n          },\r\n\r\n          //change the color of unfocused labels\r\n          '& label' : {\r\n            color: '#6c7473'\r\n          },\r\n  \r\n          // '& .MuiInput-underline:after': {\r\n          // borderBottomColor: 'green',\r\n          // },\r\n  \r\n          '& .MuiOutlinedInput-root': {\r\n  \r\n              //below is for unfocused, unhovered text field\r\n              '& fieldset': {\r\n                  borderColor: 'rgb(140,140,140)',\r\n              },\r\n  \r\n              // is for hovered text field\r\n              '&:hover fieldset': {\r\n                  borderColor: '#6c7473',\r\n              },\r\n  \r\n              //focused text field\r\n              '&.Mui-focused fieldset': {\r\n                  borderColor: 'white',\r\n              },\r\n      },\r\n    },\r\n  })(TextValidator);\r\n\r\n  export default TextValidatorStyled","import React, {Component} from 'react'\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport red from '@material-ui/core/colors/red'\r\nimport green from '@material-ui/core/colors/green'\r\n\r\nimport {withStyles} from '@material-ui/styles'\r\n\r\nimport useStyles from './styles/DisplaySetCardsStyles'\r\nimport TextValidatorStyled from './forms/TextValidatorStyled'\r\nimport {ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\n\r\nclass DisplaySetCards extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            isSelected: false,\r\n            isDialogOpen: false,\r\n            isDeleted: false, \r\n            formOpen: false,\r\n            formQuestion: this.props.card.question,\r\n            formAnswer: this.props.card.answer\r\n        }\r\n\r\n        this.handleSelectClick = this.handleSelectClick.bind(this)\r\n        this.handleDeleteClick = this.handleDeleteClick.bind(this)\r\n        this.openDialog = this.openDialog.bind(this)\r\n        this.closeDialog = this.closeDialog.bind(this)\r\n        this.handleDialogDeleteClick = this.handleDialogDeleteClick.bind(this)\r\n        this.openEditForm = this.openEditForm.bind(this)\r\n        this.handleQuestionChange = this.handleQuestionChange.bind(this)\r\n        this.handleAnswerChange = this.handleAnswerChange.bind(this)\r\n        this.submitEdit = this.submitEdit.bind(this)\r\n    }\r\n    \r\n    componentDidMount() {\r\n        ValidatorForm.addValidationRule('required', (value) => {\r\n            if (value === '')\r\n                return false\r\n            else \r\n                return true\r\n        })\r\n    }\r\n\r\n    handleSelectClick() {\r\n        this.setState({isSelected: !this.state.isSelected},() =>{\r\n        \r\n        if(this.state.isSelected){\r\n            this.props.addSelectedCards(this.props.card.question, this.props.card.answer, true, false)\r\n            console.log(this.state.isSelected)}\r\n        else{\r\n            this.props.addSelectedCards(this.props.card.question, this.props.card.answer, false, true)\r\n            console.log(this.state.isSelected)}\r\n        })\r\n    }\r\n\r\n    handleDeleteClick() {\r\n        this.props.delete_Cards(this.props.card.question, this.props.card.answer)\r\n        this.setState({isDialogOpen: false})\r\n        this.setState({isDeleted: !this.state.isDeleted})\r\n    }\r\n\r\n    openDialog() {\r\n        this.setState({isDialogOpen: true})\r\n    }\r\n\r\n    closeDialog() {this.setState({isDialogOpen: false})}\r\n\r\n    openEditForm() {\r\n        this.setState({formOpen: true})\r\n    }\r\n\r\n    handleDialogDeleteClick() {\r\n        this.handleDeleteClick()\r\n    }\r\n\r\n    handleQuestionChange(event) {\r\n        this.setState({formQuestion: event.target.value})\r\n    }\r\n\r\n    handleAnswerChange(event) {\r\n        this.setState({formAnswer: event.target.value})\r\n    }\r\n\r\n    submitEdit() {\r\n        this.props.editCard(\r\n            this.props.card,\r\n            {id: this.props.card.id, question: this.state.formQuestion, answer: this.state.formAnswer}\r\n        )\r\n        this.setState({formOpen: false})\r\n    }\r\n\r\n    render(){\r\n\r\n        const {classes, card, cardNumber, forDeletingCards} = this.props\r\n        const {isSelected, isDialogOpen, formOpen, formQuestion, formAnswer} = this.state\r\n\r\n        const editForm = (\r\n            <ValidatorForm onSubmit={this.submitEdit}>\r\n                <TextValidatorStyled \r\n                    label=\"Question\" \r\n                    variant=\"standard\" \r\n                    value={formQuestion}\r\n                    onChange={this.handleQuestionChange}\r\n                    validators={['required']}\r\n                    errorMessages={[\r\n                        'This field is required',\r\n                    ]}\r\n                    InputProps = {{\r\n                        classes: {input: classes.formInput}\r\n                    }}\r\n                />\r\n                <TextValidatorStyled \r\n                    className='mt-3'\r\n                    label=\"Answer\" \r\n                    variant=\"standard\" \r\n                    value={formAnswer}\r\n                    onChange={this.handleAnswerChange}\r\n                    validators={['required']}\r\n                    fullWidth\r\n                    errorMessages={[\r\n                        'This field is required',\r\n                    ]}\r\n                    InputProps = {{\r\n                        classes: {input: classes.formInput}\r\n                    }}\r\n                />\r\n                <div className={classes.formButton}>\r\n                    <Button \r\n                        type='submit'\r\n                        size=\"small\"  \r\n                        variant='contained'\r\n                        style={{outline: 'none', width: '35px', backgroundColor: 'orange', color: 'white'}}\r\n                    >\r\n                        Save\r\n                    </Button>\r\n                </div>\r\n            </ValidatorForm>\r\n        )\r\n\r\n        return (\r\n            <>\r\n            <Card className={classes.root}>\r\n                <Typography className={classes.cardID}>{cardNumber}</Typography>\r\n                \r\n                <CardContent>\r\n                    <Typography \r\n                        gutterBottom \r\n                        variant=\"h5\" \r\n                        component=\"h2\"\r\n                        className={forDeletingCards && !formOpen ? 'mb-5' : 'mb-2'} \r\n                    >\r\n                        {!formOpen ? card.question : editForm}\r\n\r\n                        {\r\n                            !forDeletingCards && !formOpen &&\r\n                            <EditIcon className={`ml-3 ${classes.editIcon}`} onClick={this.openEditForm}/>\r\n                        }\r\n\r\n                    </Typography>\r\n                    <Typography className={classes.answer} variant=\"body2\" component=\"p\">\r\n                        {!formOpen && card.answer}\r\n                    </Typography>\r\n                </CardContent>\r\n                \r\n                {forDeletingCards &&\r\n                <div className={classes.buttons}>\r\n                    <Button \r\n                        size=\"small\" \r\n                        color=\"secondary\" \r\n                        variant=\"outlined\" \r\n                        className={classes.button} \r\n                        style={{outline: 'none', width: '35px'}}\r\n                        onClick={this.openDialog}\r\n                    >\r\n                        Delete\r\n                    </Button>\r\n                    <Button \r\n                        size=\"small\" \r\n                        color=\"primary\" \r\n                        variant={isSelected ? 'contained' : 'text'}\r\n                        onClick={this.handleSelectClick}\r\n                        style={{outline: 'none', width: '35px'}}\r\n                    >\r\n                        {isSelected ? 'Selected' : 'Select'}\r\n                    </Button>\r\n                </div>\r\n                }\r\n\r\n            </Card>\r\n\r\n            <Dialog \r\n            aria-labelledby=\"simple-dialog-title\" \r\n            open={isDialogOpen} \r\n            onClose={this.closeDialog}\r\n            >   \r\n                <DialogTitle id=\"simple-dialog-title\">Delete This Card?</DialogTitle>\r\n                <List>\r\n                    <ListItem button onClick={this.handleDialogDeleteClick}>\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{color: green[600], backgroundColor: green[200]}}>\r\n                                <CheckIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary='Delete' />\r\n                    </ListItem>\r\n\r\n                    <ListItem button onClick={this.closeDialog}>\r\n                        <ListItemAvatar>\r\n                            <Avatar style={{color: red[600], backgroundColor: red[200]}}>\r\n                                <CloseIcon />\r\n                            </Avatar>\r\n                        </ListItemAvatar>\r\n                        <ListItemText primary='Cancel' />\r\n                    </ListItem>\r\n                </List>\r\n            </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(useStyles)(DisplaySetCards)\r\n","export default {\r\n    \"@global\": {\r\n        '&::-webkit-scrollbar-track' : {\r\n            backgroundColor: 'green'\r\n        },\r\n        '&::-webkit-scrollbar-thumb': {\r\n            backgroundColor: 'red'\r\n        }\r\n    },\r\n\r\n    root: {\r\n        width: 345,\r\n        color: 'white',\r\n        backgroundColor: 'black',\r\n        margin: '5px',\r\n        boxShadow: '0 0 20px white',\r\n        height: 200,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n        padding: '0 5 10 10',\r\n        position: 'relative', \r\n        overflowY: 'auto',\r\n        /* Track */\r\n        \r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n    answer : {\r\n        color: '#6c7473'\r\n    },\r\n    buttons: {\r\n        marginLeft: '15px',\r\n        marginBottom: '15px',\r\n        \"& button\": {\r\n            marginRight: '15px'\r\n        }\r\n    },\r\n    cardID: {\r\n        position: 'absolute',\r\n        right: '10px',\r\n        top: '10px'\r\n    },\r\n    \r\n    // to change the color of the text the user inputs\r\n    formInput: {\r\n        color: 'white',\r\n    },\r\n\r\n    formButton: {\r\n        position: 'absolute',\r\n        right: '10px',\r\n        bottom: '10px'\r\n    },\r\n    editIcon: {\r\n        cursor: 'pointer'\r\n    }\r\n  }\r\n","import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction BasicNavbar() {\r\n    return (\r\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link class=\"navbar-brand\" to='/'>Flash Cards</Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                <ul class=\"navbar-nav mr-auto\"> \r\n                    <li class=\"nav-item\">\r\n                        \r\n                        <Link to='/create/new-set' className=\"nav-link\">\r\n                            <i className=\"fas fa-folder-plus mr-2\"></i>\r\n                            Create a new Set\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default BasicNavbar\r\n","import React, {useState} from 'react'\r\nimport DisplaySetCards from './DisplaySetCards'\r\nimport {withStyles} from '@material-ui/styles'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nimport BasicNavbar from './Navbars/BasicNavbar'\r\n\r\nconst styles = {\r\n    root : {\r\n        padding: '0 0 30px 0',\r\n        backgroundColor: 'black',\r\n        minHeight: '100vh'\r\n    },\r\n    grid: {\r\n        width: '80%',\r\n        margin: '0 auto',\r\n        paddingTop: '20px',\r\n        display: 'grid',\r\n        gridColumnGap: '20px',\r\n        gridRowGap: '20px',\r\n        gridTemplateColumns: 'auto auto auto'\r\n    },\r\n    button: {\r\n        width: '80%',\r\n        margin: '30px auto',\r\n    },\r\n    title : {\r\n        color: 'white',\r\n        margin: '10px auto',\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\nfunction DeleteCards({cardSet, classes, realDeleteCardsFromApp}) {\r\n    const [selectedCards, setSelectedCards] = useState([])\r\n\r\n    const delete_Cards = (question, answer) => {\r\n        // id is a list with either 1 or more elements\r\n        realDeleteCardsFromApp(cardSet.setId, question, answer)\r\n    }\r\n\r\n    const addSelectedCards = (question, answer, doWeAdd = false) => {\r\n        if (doWeAdd){\r\n            let newlist = [...selectedCards, {question, answer}]\r\n            setSelectedCards(newlist)\r\n        }\r\n        else{\r\n            let newlist = selectedCards.filter(\r\n                card => (card.question !== question && card.answer !== answer)\r\n            )\r\n            setSelectedCards(newlist)\r\n        }\r\n        console.log(setSelectedCards)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BasicNavbar />\r\n            <h3 className={classes.title}>Delete Cards in Set - {cardSet.setName}</h3>\r\n            <div className={classes.button}>\r\n                <Button \r\n                    style={{background:'#FF0000', marginLeft: 'auto', outline: 'none', color: \"white\"}} \r\n                    size='large' \r\n                    variant=\"contained\"\r\n                >   Delete Selected\r\n                </Button>\r\n            </div>\r\n\r\n            <div className={classes.grid}>\r\n                {cardSet.cards.map(\r\n                    (card, index) => <DisplaySetCards \r\n                            card={card} \r\n                            key={card.question + toString(index)}\r\n                            cardNumber={index+1}\r\n                            addSelectedCards={addSelectedCards}\r\n                            delete_Cards={delete_Cards}\r\n                            forDeletingCards\r\n                        />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(DeleteCards)\r\n","import React, {useState} from 'react'\r\nimport styles from './styles/MiniCardsStyles'\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport {withStyles} from '@material-ui/styles'\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\n\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport red from '@material-ui/core/colors/red'\r\nimport green from '@material-ui/core/colors/green'\r\n\r\nfunction MiniCards({set, classes, handleClick, deleteSet}) {\r\n    const [isDialogOpen, setIsDialogOpen] = useState(false)\r\n    // words arring from Home component\r\n\r\n    // create a mini card for each language \r\n    // words is not the entire DB\r\n\r\n\r\n    function handleDeleteClick() {\r\n        deleteSet(set.setId)\r\n        setIsDialogOpen(false)\r\n    }\r\n\r\n    function openDialog(event) {\r\n        event.stopPropagation()\r\n        setIsDialogOpen(true)\r\n    }\r\n    function closeDialog() {setIsDialogOpen(false)}\r\n\r\n    return (\r\n        <div>\r\n        <div onClick={handleClick}>\r\n            <Card className={classes.root}>\r\n                <CardContent>\r\n                    <Typography className={classes.question}>\r\n                        {set.setName}\r\n                    </Typography>\r\n                    <Typography className={classes.moreInfo}>\r\n                        {set.cards.length} Cards\r\n                    </Typography>\r\n                    \r\n                </CardContent>\r\n                \r\n                <DeleteIcon className={classes.deleteIcon} onClick={openDialog}/>\r\n                \r\n            </Card>\r\n        </div>\r\n\r\n        <Dialog \r\n            aria-labelledby=\"simple-dialog-title\" \r\n            open={isDialogOpen} \r\n            onClose={closeDialog}\r\n        >\r\n            <DialogTitle id=\"simple-dialog-title\">Delete This Card?</DialogTitle>\r\n            <List>\r\n                <ListItem button onClick={handleDeleteClick}>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{color: green[600], backgroundColor: green[200]}}>\r\n                            <CheckIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary='Delete' />\r\n                </ListItem>\r\n\r\n                <ListItem button onClick={closeDialog}>\r\n                    <ListItemAvatar>\r\n                        <Avatar style={{color: red[600], backgroundColor: red[200]}}>\r\n                            <CloseIcon />\r\n                        </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText primary='Cancel' />\r\n                </ListItem>\r\n            </List>\r\n        </Dialog>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(MiniCards)\r\n","export default {\r\n    root: {\r\n        width: 175,\r\n        height: 200, \r\n        backgroundColor: 'black',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        position: 'relative',\r\n        boxShadow: '0 0 20px white',\r\n        \"&:hover svg\" : {\r\n            opacity: 1\r\n        }\r\n    },\r\n    question : {\r\n        fontSize: '1rem',\r\n        color: 'white',\r\n        textAlign: 'center'\r\n    },\r\n    moreInfo : {\r\n        fontSize: '0.7rem',\r\n        color: '#6c7473',\r\n        textAlign: 'center'\r\n    },\r\n    deleteIcon: {\r\n        color: 'white',\r\n        position: 'absolute',\r\n        bottom: '15px',\r\n        right: '15px',\r\n        opacity: 0,\r\n        '&:hover' : {\r\n            color: 'red',\r\n            transform: 'scale(1.5, 1.5)',\r\n            transition: 'all 0.2s ease-in-out'\r\n        }\r\n    }\r\n}","const styles = {\r\n    \"@global\": {\r\n        \".fade-exit\": {\r\n          opacity: 1\r\n        },\r\n        \".fade-exit-active\": {\r\n          opacity: 0,\r\n          transition: \"opacity 500ms ease-out\"\r\n        }\r\n    },\r\n\r\n    root: {\r\n        backgroundColor: \"black\",\r\n        widht: '100vw',\r\n        minHeight: '100vh',\r\n        paddingBottom: '30px'\r\n    },\r\n    link: {\r\n        color: 'white',\r\n        postion: 'fixed',\r\n        top: '50%',\r\n        left: '50%',\r\n        fontSize: '3rem'\r\n    },\r\n    container : {\r\n        width: '75%',\r\n        margin: '50px auto',\r\n        display: 'grid',\r\n        gridColumnGap: '40px',\r\n        gridRowGap: '40px',\r\n        gridTemplateColumns: 'auto auto auto auto',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    title: {\r\n        color: 'white',\r\n        textAlign:'center'\r\n    }\r\n}\r\n\r\nexport default styles","import React from 'react'\r\nimport {withStyles} from '@material-ui/styles'\r\nimport MiniCards from './MiniCards';\r\nimport BasicNavbar from './Navbars/BasicNavbar';\r\nimport styles from './styles/HomeStyles'\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\n\r\nfunction Home({entireSet, classes, history, deleteSetFromApp}) {\r\n    // const links = data_keys.map(key => <Link to={`${/key}`}>{key}</Link>)\r\n    const goToCard = (id) => {\r\n        history.push('/' + id + '/cards')\r\n    }\r\n\r\n    const deleteSet = (setId) => {\r\n        deleteSetFromApp(setId)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BasicNavbar />\r\n            <h4 className={`${classes.title} mt-4`}>Your Study Sets</h4>\r\n\r\n            <TransitionGroup className={classes.container}>\r\n            \r\n            {entireSet.map(set => \r\n            (   <CSSTransition key={set.setId} classNames='fade' timeout={500}>\r\n                    <MiniCards \r\n                        \r\n                        set={set} \r\n                        handleClick={() => goToCard(set.setId)}\r\n                        deleteSet={deleteSet}\r\n                    />\r\n                </CSSTransition>\r\n                )\r\n            )\r\n            }\r\n            </TransitionGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(Home)\r\n","import { useState } from \"react\";\r\n\r\nfunction useInputState(initialValue) {\r\n    const [state, setState] = useState(initialValue)\r\n\r\n    const handleChange = (event) => {\r\n        setState(event.target.value)\r\n    }\r\n\r\n    const reset = () => {\r\n        setState(\"\")\r\n    }\r\n\r\n    return [state, handleChange, reset]\r\n}\r\n\r\nexport default useInputState","import React, {useEffect} from 'react'\r\nimport useInputState from './hooks/useInputState'\r\nimport useStyles from './styles/AddQuestionFormStyles'\r\nimport BasicNavbar from './Navbars/BasicNavbar';\r\n\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport {ValidatorForm} from 'react-material-ui-form-validator'\r\n\r\nimport TextValidatorStyled from './forms/TextValidatorStyled'\r\n\r\n\r\n\r\nfunction AddQuestionForm({classes, data, addQuestionsFromForm}) {\r\n\r\n    const [separator, handleSeperatorChange, resetSeparator] = useInputState(\"\")\r\n    const [input, handleInputChange, reset] = useInputState(\"\")\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('required', (value) => {\r\n            if (value === '')\r\n                return false\r\n            else\r\n                return true\r\n        })\r\n        \r\n        \r\n\r\n    }, [separator, input])\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('noSeparatorFound', value => {\r\n            let all_input_chars = input.split(\"\")\r\n            if (!all_input_chars.includes(separator))\r\n                return false\r\n            else\r\n                return true\r\n        })\r\n    }, [separator])\r\n\r\n    const submitForm = (event) => {\r\n        event.preventDefault()\r\n        \r\n        let separatedBy = separator\r\n        let text = input\r\n        let all_things = text.split(\"\\n\")\r\n        // console.log(all_things) \r\n\r\n        var new_data = data.cards\r\n\r\n        for (let i = 0 ; i < all_things.length; i++){\r\n            let question = all_things[i].split(separatedBy)[0]\r\n            let answer = all_things[i].split(separatedBy)[1]\r\n            let id = new_data.length\r\n            new_data.push({id: id, question: question, answer: answer})\r\n        }\r\n        // newData is a list\r\n        addQuestionsFromForm(data.setId, new_data)\r\n        \r\n        reset()\r\n        resetSeparator()\r\n    }\r\n    \r\n    return (\r\n    <div className={classes.root}>\r\n        <BasicNavbar />\r\n        \r\n        <div className={classes.form}>\r\n            <h4 className=\"mb-5\">Add A New Card to Set - {data.setName}</h4>\r\n            <ValidatorForm onSubmit={submitForm}>\r\n                <div className=\"form-group mb-5\">\r\n                    <TextValidatorStyled\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Questions and Answers Seperated by a Symbol\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        name=\"input\"\r\n                        rows={10}\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        validators={['required']}\r\n                        errorMessages={[\r\n                            'This field is required'\r\n                        ]}\r\n                        InputProps={{\r\n                            className: classes.formInput\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group mb-5\">\r\n                    <p>\r\n                        Please enter the character seperating your questions from answers\r\n                    </p>\r\n                    <TextValidatorStyled\r\n                        className={classes.separatorField}\r\n                        id=\"outlined-basic\" \r\n                        label=\"Separator\" \r\n                        name=\"Separator\"\r\n                        variant=\"outlined\" \r\n                        value={separator}\r\n                        onChange={handleSeperatorChange}\r\n                        validators={['required', 'noSeparatorFound']}\r\n                        errorMessages={[\r\n                            'This field is required', \r\n                            `The separator was not found in the input`\r\n                    ]}\r\n                    InputProps={{\r\n                        className: classes.formInput\r\n                    }}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n                <div className=\"form-group mb-5\">\r\n                    <Button variant=\"outlined\" color=\"inherit\"  type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </ValidatorForm>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(useStyles)(AddQuestionForm)\r\n","export default {\r\n    root: {\r\n        height: '100vh',\r\n        margin: 0,\r\n        backgroundColor: 'rgb(10,10,10)',\r\n        color: 'white'\r\n    },\r\n\r\n    form: {\r\n        width: '75%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '50px auto',\r\n        \r\n    },\r\n    // to change the color of the text the user inputs\r\n    formInput: {\r\n        color: 'white',\r\n    },\r\n    \r\n}","const useStyles = {\r\n    root: {\r\n        margin: 0,\r\n        backgroundColor: 'black',\r\n        color: 'white'\r\n    },\r\n\r\n    form: {\r\n        width: '75%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        margin: '50px auto',\r\n        marginBottom: 0\r\n    },\r\n\r\n    // to change the color of the text the user inputs\r\n    formInput: {\r\n        color: 'white',\r\n    },\r\n}\r\n\r\nexport default useStyles","import React, {useEffect} from 'react'\r\nimport useInputState from './hooks/useInputState'\r\nimport useStyles from './styles/AddNewCardSetFormStyles'\r\nimport BasicNavbar from './Navbars/BasicNavbar';\r\n\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport {ValidatorForm} from 'react-material-ui-form-validator'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport TextValidatorStyled from './forms/TextValidatorStyled'\r\n\r\nfunction AddQuestionForm({classes, cardSet, addNewCardSet}) {\r\n\r\n    const [separator, handleSeperatorChange, resetSeparator] = useInputState(\"\")\r\n    const [input, handleInputChange, reset] = useInputState(\"\")\r\n    const [setName, handleSetNameChange, resetSetName] = useInputState(\"\")\r\n    \r\n    // console.log(\"Data coming in the props: \", data)\r\n\r\n    const submitForm = (event) => {\r\n        event.preventDefault()\r\n\r\n        let separatedBy = separator\r\n        let text = input\r\n        let all_things = text.split(\"\\n\")\r\n        // console.log(all_things) \r\n\r\n        var new_data = []\r\n\r\n        for (let i = 0 ; i < all_things.length; i++){\r\n            let question = all_things[i].split(separatedBy)[0]\r\n            let answer = all_things[i].split(separatedBy)[1]\r\n            let id = new_data.length\r\n            new_data.push({id: id, question: question, answer: answer})\r\n        }\r\n\r\n        // newData is a list\r\n        addNewCardSet(setName, new_data)\r\n        \r\n        reset()\r\n        resetSeparator()\r\n        resetSetName()\r\n    }\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('required', (value) => {\r\n            if (value === '')\r\n                return false\r\n            else\r\n                return true\r\n        })\r\n\r\n        ValidatorForm.addValidationRule('isNameUnique', value => {\r\n            let new_set = cardSet.filter(set => set.setName.toLowerCase() === value.toLowerCase())\r\n            if (new_set.length > 0)\r\n                return false\r\n            else\r\n                return true\r\n        })\r\n        \r\n    }, [separator, input, setName])\r\n\r\n    useEffect(() => {\r\n        ValidatorForm.addValidationRule('noSeparatorFound', value => {\r\n            let all_input_chars = input.split(\"\")\r\n            if (!all_input_chars.includes(separator))\r\n                return false\r\n            else\r\n                return true\r\n        })\r\n    }, [separator])\r\n    \r\n    return (\r\n    <div className={classes.root}>\r\n        <BasicNavbar />\r\n        <div className={classes.form}>\r\n            <ValidatorForm onSubmit={submitForm}>\r\n                <div className=\"form-group mb-5\">\r\n                    <p>\r\n                        Please enter a unique name for the New Set\r\n                    </p>\r\n                    <TextValidatorStyled \r\n                        className={classes.separatorField}\r\n                        id=\"outlined-basic\" \r\n                        label=\"Set Name\" \r\n                        variant=\"outlined\" \r\n                        value={setName}\r\n                        onChange={handleSetNameChange}\r\n                        validators={['required', 'isNameUnique']}\r\n                        errorMessages={[\r\n                            'This field is required',\r\n                            'The Set Name is already used'\r\n                        ]}\r\n                        InputProps = {{\r\n                            classes: {input: classes.formInput}\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group mb-5\">\r\n                    <TextValidatorStyled\r\n                        id=\"standard-multiline-flexible\"\r\n                        label=\"Questions and Answers Seperated by a Symbol\"\r\n                        multiline\r\n                        variant=\"outlined\"\r\n                        rows={10}\r\n                        value={input}\r\n                        onChange={handleInputChange}\r\n                        fullWidth\r\n                        validators={['required']}\r\n                        errorMessages={[\r\n                            'This field is required'\r\n                        ]}\r\n                        InputProps = {{\r\n                            className: classes.formInput\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group mb-5\">\r\n                    <p>\r\n                        Please enter the character seperating your questions from answers\r\n                    </p>\r\n                    <TextValidatorStyled \r\n                        className={classes.separatorField}\r\n                        id=\"outlined-basic\" \r\n                        label=\"Seperator\" \r\n                        variant=\"outlined\" \r\n                        value={separator}\r\n                        onChange={handleSeperatorChange}\r\n                        validators={['required', 'noSeparatorFound']}\r\n                        errorMessages={[\r\n                            'This field is required',\r\n                            `The separator was not found in the input`\r\n                        ]}\r\n                        InputProps = {{\r\n                            className: classes.formInput,\r\n                        }}\r\n                    />\r\n                </div>\r\n                \r\n                \r\n                <div className=\"form-group mb-5\">\r\n                    <Button variant=\"outlined\" color=\"inherit\"  type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </div>\r\n            </ValidatorForm>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(useStyles)(AddQuestionForm)\r\n","import React from 'react'\r\nimport DisplaySetCards from './DisplaySetCards'\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport BasicNavbar from './Navbars/BasicNavbar';\r\n\r\nconst styles = {\r\n    root : {\r\n        padding: '0 0 30px 0',\r\n        backgroundColor: 'black',\r\n        minHeight: '100vh'\r\n    },\r\n    grid: {\r\n        width: '80%',\r\n        margin: '30px auto',\r\n        paddingTop: '20px',\r\n        display: 'grid',\r\n        gridColumnGap: '20px',\r\n        gridRowGap: '20px',\r\n        gridTemplateColumns: 'auto auto auto'\r\n    },\r\n    title : {\r\n        color: 'white',\r\n        margin: '10px auto',\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\nfunction EditCards({classes, cardSet, editCardFromApp}) {\r\n\r\n    function edit(oldCard, newCard) {\r\n        // oldCard and newCards are objects with cardId, question and answer\r\n        let newCardList = cardSet.cards.filter(card => \r\n            (card.question !== oldCard.question && card.answer !== oldCard.answer)\r\n        )\r\n        newCardList = [...newCardList, newCard]\r\n        \r\n        editCardFromApp(cardSet.setId, newCardList)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <BasicNavbar />\r\n            <h3 className={classes.title}>Edit Cards in Set - {cardSet.setName}</h3>\r\n            <div className={classes.grid}>\r\n                {cardSet.cards.map(\r\n                    (card, index) => <DisplaySetCards \r\n                            card={card} \r\n                            key={card.question + toString(index)}\r\n                            cardNumber={index+1}\r\n                            forDeletingCards={false}\r\n                            editCard={edit}\r\n                        />\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withStyles(styles)(EditCards)\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {Switch, Route} from 'react-router-dom'\r\n\r\nimport { useLocalStorageState } from \"./hooks/useLocalStorageState\";\r\nimport dummyData from './seedData'\r\nimport RenderCards from './RenderCards';\r\nimport DeleteCards from './DeleteCards';\r\nimport Home from './Home';\r\nimport AddQuestionForm from './AddQuestionForm';\r\nimport AddNewCardSetForm from './AddNewCardSetForm';\r\nimport EditCards from './EditCards'\r\n\r\nfunction App() {\r\n    const [cardsSet, setCardsSet] = useLocalStorageState(\"cardsSet\", dummyData)\r\n\r\n    const addQuestionsFromForm =  (setId, newData) => {\r\n        // newData is a list\r\n        var new_words = cardsSet\r\n        for (let i = 0; i < new_words.length; i++) {\r\n            if(new_words[i].setId === setId)\r\n                new_words[i].cards = newData\r\n        }\r\n        // console.log(new_words)\r\n        setCardsSet(\r\n            new_words\r\n        )\r\n        window.localStorage.setItem('cardsSet', JSON.stringify(cardsSet))\r\n    }\r\n\r\n    const addNewCardSet = (setName, setCards) => {\r\n        let setId = setName.toLowerCase().replace(' ', '-')\r\n        let new_words = [...cardsSet, {setName: setName, setId: setId, cards: setCards} ]\r\n        setCardsSet(new_words)\r\n        window.localStorage.setItem('cardsSet', JSON.stringify(cardsSet))\r\n\r\n    }\r\n\r\n    const chooseSetToPass = (id) => {\r\n        const to_return = cardsSet.filter(set => id === set.setId)[0]\r\n        console.log(\"Returned from filter: \", to_return)\r\n        return to_return\r\n    }\r\n\r\n    const deleteCards = async (setId, question, answer, selectedCards=[]) => {\r\n        if (selectedCards.length === 0){\r\n            var new_words = cardsSet\r\n            for (let i = 0; i < cardsSet.length; i++){\r\n                if (new_words[i].setId === setId)\r\n                    new_words[i].cards = new_words[i].cards.filter(\r\n                        card => (card.question !== question && card.answer !== answer)\r\n                    )\r\n            }\r\n            await setCardsSet(new_words)\r\n        }\r\n        window.localStorage.setItem('cardsSet', JSON.stringify(cardsSet))\r\n    }\r\n\r\n    const deleteSet = (setId) => {\r\n        let newCardsSet = cardsSet.filter(set => set.setId !== setId)\r\n        setCardsSet(newCardsSet)\r\n        window.localStorage.setItem('cardsSet', JSON.stringify(cardsSet))\r\n    }\r\n\r\n    const editCardFromApp = (setId, newCardsList) => {\r\n        let new_cardSet = cardsSet\r\n        for (let i = 0; i < new_cardSet.length; i++){\r\n            if(new_cardSet[i].setId === setId){\r\n                new_cardSet[i].cards = newCardsList\r\n            }\r\n        }\r\n        setCardsSet(new_cardSet)\r\n        window.localStorage.setItem('cardsSet', JSON.stringify(cardsSet))\r\n    }\r\n\r\n    return (\r\n        <Switch>\r\n            <Route \r\n                exact \r\n                path=\"/\" \r\n                render={routeProps => \r\n                    <Home \r\n                        entireSet={cardsSet} \r\n                        {...routeProps}\r\n                        deleteSetFromApp = {deleteSet}\r\n                    />} \r\n                />\r\n            <Route \r\n                exact \r\n                path=\"/:setId/add\" \r\n                render={routeParams => \r\n                    <AddQuestionForm \r\n                        data={chooseSetToPass(routeParams.match.params.setId)}\r\n                        addQuestionsFromForm={addQuestionsFromForm}\r\n                    />\r\n                } \r\n            />\r\n            <Route \r\n                exact \r\n                path=\"/:setId/cards\" \r\n                render={(routeParams) => \r\n                    <RenderCards \r\n                        dummyData={chooseSetToPass(routeParams.match.params.setId)} \r\n                    />} \r\n            />\r\n            <Route\r\n                exact \r\n                path = \"/create/new-set\"\r\n                render = {\r\n                    () => <AddNewCardSetForm cardSet={cardsSet} addNewCardSet={addNewCardSet}/>\r\n                } \r\n            />\r\n            <Route \r\n                exact\r\n                path='/:setId/cards/delete'\r\n                render={\r\n                    (routeParams) =>( \r\n                    <DeleteCards \r\n                        cardSet={chooseSetToPass(routeParams.match.params.setId)}\r\n                        realDeleteCardsFromApp={deleteCards}\r\n                    />)\r\n                }\r\n            />\r\n            <Route \r\n                exact\r\n                path='/:setId/cards/edit'\r\n                render={\r\n                    (routeParams) =>( \r\n                    <EditCards \r\n                        cardSet={chooseSetToPass(routeParams.match.params.setId)}\r\n                        editCardFromApp={editCardFromApp}\r\n                    />)\r\n                }\r\n            />\r\n        </Switch>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction useLocalStorageState(key, defaultVal) {\r\n    const [state, setState] = useState(() => {\r\n        let value;\r\n\r\n        try {\r\n            value = JSON.parse(\r\n                window.localStorage.getItem(key) || String(defaultVal)\r\n            );\r\n        } \r\n        \r\n        catch (e) {\r\n            value = defaultVal;\r\n        }\r\n\r\n        console.log(\"USING\", value);\r\n        return value;\r\n    });\r\n\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state]);\r\n\r\n    return [state, setState];\r\n  \r\n}\r\nexport { useLocalStorageState };\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport \"bootstrap\"\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom'\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}